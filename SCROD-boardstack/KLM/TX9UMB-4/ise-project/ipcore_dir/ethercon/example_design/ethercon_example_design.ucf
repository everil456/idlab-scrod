CONFIG PART = xc6slx45tfgg484-2;

#***********************************************************
# PCS/PMA Clock period Constraints: please do not relax    *
#***********************************************************

NET "clkin" TNM_NET = "clkin";
TIMESPEC "TS_clkin" = PERIOD "clkin" 8 ns HIGH 50 %;

NET "gtpclkout" TNM_NET = "gtpclkout";
TIMESPEC "TS_gtpclkout" = PERIOD "gtpclkout" 8 ns HIGH 50 %;


#***********************************************************
# GTP placement constraints                                *
#***********************************************************

# GTPA1_DUAL_X0Y0 is used as an example.
INST "core_wrapper/transceiver_inst/GTP_1000X/tile0_s6_gtpwizard_i/gtpa1_dual_i" LOC = "GTPA1_DUAL_X0Y0";

# The Reference clock pins are located next to the GTP
INST "brefclk_n" LOC = "B10";
INST "brefclk_p" LOC = "A10";


#***********************************************************
# GMII constraints for the core attached to GTP 0          *
#***********************************************************
# If the GMII is intended to be an internal interface,     *
# the GMII signals can be connected directly to user       *
# logic and all of the following constraints in this file  *
# should be removed.                                       *
#                                                          *
# If the GMII is intended to be an external interface,     *
# all of the following constraints in this file should be  *
# maintained.                                              *
#***********************************************************


#-----------------------------------------------------------
# Lock down the GMII Tx signals to the same bank for low   -
# skew.  This is an example placement only.                -
#-----------------------------------------------------------
INST "gmii_tx_clk0" LOC = "AA12 ";

INST "gmii_tx_en0"  LOC = "T15";
INST "gmii_tx_er0"  LOC = "T11";
INST "gmii_txd0<0>" LOC = "AB13";
INST "gmii_txd0<1>" LOC = "T12";
INST "gmii_txd0<2>" LOC = "U12";
INST "gmii_txd0<3>" LOC = "W14";
INST "gmii_txd0<4>" LOC = "Y14";
INST "gmii_txd0<5>" LOC = Y15"";
INST "gmii_txd0<6>" LOC = "U15";
INST "gmii_txd0<7>" LOC = "R11";

#-----------------------------------------------------------
# To Adjust GMII Tx Input Setup/Hold Timing                -
#-----------------------------------------------------------
INST "delay_gmii_tx_en0"  IDELAY_VALUE = 5;
INST "delay_gmii_tx_er0"  IDELAY_VALUE = 5;

INST "gmii_data_bus0[7].delay_gmii_txd0"  IDELAY_VALUE = 5;
INST "gmii_data_bus0[6].delay_gmii_txd0"  IDELAY_VALUE = 5;
INST "gmii_data_bus0[5].delay_gmii_txd0"  IDELAY_VALUE = 5;
INST "gmii_data_bus0[4].delay_gmii_txd0"  IDELAY_VALUE = 5;
INST "gmii_data_bus0[3].delay_gmii_txd0"  IDELAY_VALUE = 5;
INST "gmii_data_bus0[2].delay_gmii_txd0"  IDELAY_VALUE = 5;
INST "gmii_data_bus0[1].delay_gmii_txd0"  IDELAY_VALUE = 5;
INST "gmii_data_bus0[0].delay_gmii_txd0"  IDELAY_VALUE = 5;

#-----------------------------------------------------------
# To check (analyze) GMII Tx Input Setup/Hold Timing       -
#-----------------------------------------------------------
INST "gmii_txd0*"  TNM = IN_GMII0;
INST "gmii_tx_en0" TNM = IN_GMII0;
INST "gmii_tx_er0" TNM = IN_GMII0;

TIMEGRP "IN_GMII0" OFFSET = IN 2.5 ns VALID 3 ns BEFORE "gmii_tx_clk0";


#-----------------------------------------------------------
# GMII IOSTANDARD Constraints: please select an I/O        -
# Standard (LVTTL is suggested).                           -
#-----------------------------------------------------------

INST "gmii_txd0<?>"      IOSTANDARD = LVTTL;
INST "gmii_tx_en0"       IOSTANDARD = LVTTL;
INST "gmii_tx_er0"       IOSTANDARD = LVTTL;

INST "gmii_rxd0<?>"      IOSTANDARD = LVTTL;
INST "gmii_rx_dv0"       IOSTANDARD = LVTTL;
INST "gmii_rx_er0"       IOSTANDARD = LVTTL;

INST "gmii_tx_clk0"      IOSTANDARD = LVTTL;
INST "gmii_rx_clk0"      IOSTANDARD = LVTTL;

#-----------------------------------------------------------
# Fast Skew maximises output setup and hold timing         -
#-----------------------------------------------------------
INST "gmii_rxd0<?>"      SLEW = FAST;
INST "gmii_rx_dv0"       SLEW = FAST;
INST "gmii_rx_er0"       SLEW = FAST;
INST "gmii_rx_clk0"      SLEW = FAST;

#-----------------------------------------------------------
# GMII Transmitter Constraints:  place flip-flops in IOB   -
#-----------------------------------------------------------
   
INST "gmii_txd_iff0*"  IOB = true;
INST "gmii_tx_en_iff0" IOB = true;
INST "gmii_tx_er_iff0" IOB = true;
         

#-----------------------------------------------------------
# GMII Receiver Constraints:  place flip-flops in IOB      -
#-----------------------------------------------------------
INST "gmii_rxd_obuf0*"  IOB = true;
INST "gmii_rx_dv_obuf0" IOB = true;
INST "gmii_rx_er_obuf0" IOB = true;

#-----------------------------------------------------------
# GMII Clock period Constraints: please do not relax       -
#-----------------------------------------------------------

# Describe the GMII Tx clock at the input pads
NET "gmii_tx_clk0" TNM_NET = "gmii_tx_clk0";
TIMESPEC "ts_gmii_tx_clk0" = PERIOD "gmii_tx_clk0" 8000 ps HIGH 50 %;

#-----------------------------------------------------------
# GMII Tx Elastic Buffer Constraints                       -
#-----------------------------------------------------------

# Identify clock domain crossing registers
INST "tx_elastic_buffer_inst0/rd_addrgray*" TNM = "rd_graycode0";
INST "tx_elastic_buffer_inst0/wr_addrgray*" TNM = "wr_graycode0";

# Control Gray Code delay and skew across clock boundary
TIMESPEC "ts_tx0_skew_control1" = FROM "rd_graycode0" TO "FFS" 6 ns DATAPATHONLY;
TIMESPEC "ts_tx0_skew_control2" = FROM "wr_graycode0" TO "FFS" 6 ns DATAPATHONLY;

# Constrain between Distributed Memory (output data) and the 1st set of flip-flops
INST "tx_elastic_buffer_inst0/txd_fifo_reg1*"  TNM = "TX_FIFO_SAMPLE0";
INST "tx_elastic_buffer_inst0/tx_en_fifo_reg1" TNM = "TX_FIFO_SAMPLE0";
INST "tx_elastic_buffer_inst0/tx_er_fifo_reg1" TNM = "TX_FIFO_SAMPLE0";
TIMESPEC "ts_tx_rams_to_ffs0" = FROM "RAMS" TO "TX_FIFO_SAMPLE0"  6 ns DATAPATHONLY; 


#-----------------------------------------------------------
# For the purposes of this example design, set all other   -
# I/O to also use LVTTL.                                   -
#                                                          -
# This prevents PAR experiencing IOB banking issues due to -
# different Voltage standards.                             -
#                                                          -
#-----------------------------------------------------------
INST "mdc0"                     IOSTANDARD = LVTTL;
INST "mdio0_i"                  IOSTANDARD = LVTTL;
INST "mdio0_o"                  IOSTANDARD = LVTTL;
INST "mdio0_t"                  IOSTANDARD = LVTTL;
INST "phyad0<?>"                IOSTANDARD = LVTTL;
INST "an_interrupt0"            IOSTANDARD = LVTTL;
INST "link_timer_value0<?>"     IOSTANDARD = LVTTL;
INST "reset0"                   IOSTANDARD = LVTTL;
INST "signal_detect0"           IOSTANDARD = LVTTL;
INST "status_vector0*"          IOSTANDARD = LVTTL;




