--------------------------------------------------------------------------------
-- File       : transceiver.vhd
-- Author     : Xilinx
--------------------------------------------------------------------------------
-- (c) Copyright 2009 Xilinx, Inc. All rights reserved.
--
-- This file contains confidential and proprietary information
-- of Xilinx, Inc. and is protected under U.S. and
-- international copyright and other intellectual property
-- laws.
--
-- DISCLAIMER
-- This disclaimer is not a license and does not grant any
-- rights to the materials distributed herewith. Except as
-- otherwise provided in a valid license issued to you by
-- Xilinx, and to the maximum extent permitted by applicable
-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
-- (2) Xilinx shall not be liable (whether in contract or tort,
-- including negligence, or under any other theory of
-- liability) for any loss or damage of any kind or nature
-- related to, arising under or in connection with these
-- materials, including for any direct, or any indirect,
-- special, incidental, or consequential loss or damage
-- (including loss of data, profits, goodwill, or any type of
-- loss or damage suffered as a result of any action brought
-- by a third party) even if such damage or loss was
-- reasonably foreseeable or Xilinx had been advised of the
-- possibility of the same.
--
-- CRITICAL APPLICATIONS
-- Xilinx products are not designed or intended to be fail-
-- safe, or for use in any application requiring fail-safe
-- performance, such as life-support or safety devices or
-- systems, Class III medical devices, nuclear facilities,
-- applications related to the deployment of airbags, or any
-- other applications that could lead to death, personal
-- injury, or severe property or environmental damage
-- (individually and collectively, "Critical
-- Applications"). Customer assumes the sole risk and
-- liability of any use of Xilinx products in Critical
-- Applications, subject only to applicable laws and
-- regulations governing limitations on product liability.
--
-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
-- PART OF THIS FILE AT ALL TIMES. 
-- 
-- 

--------------------------------------------------------------------------------
-- Description:  This is the VHDL instantiation of a Spartan-6 GTP
--               tranceiver tile for Gigabit Ethernet. The
--               instantiated component is generated by the GTP Wizard.
--------------------------------------------------------------------------------


library ieee;
use ieee.std_logic_1164.ALL;
use ieee.numeric_std.ALL;

library UNISIM;
use UNISIM.Vcomponents.ALL;


entity transceiver_A is
   generic (
    -- Set to 1 to Speed up the GTP simulation
    SIM_GTPRESET_SPEEDUP   : integer   := 0
   );
   port (
      gtpclkout            : out std_logic;
      gtpclkin             : in  std_logic;

      -- I/O for GTP0
      gtpreset0            : in  std_logic;
      plllkdet0            : out std_logic;
      resetdone0           : out std_logic;
      enablealign0         : in  std_logic;
      powerdown0           : in  std_logic;
      loopback0            : in  std_logic;
      rxchariscomma0       : out std_logic;
      rxcharisk0           : out std_logic;
      rxclkcorcnt0         : out std_logic_vector (2 downto 0);
      rxdata0              : out std_logic_vector (7 downto 0);
      rxdisperr0           : out std_logic;
      rxnotintable0        : out std_logic;
      rxrundisp0           : out std_logic;
      rxbuferr0            : out std_logic;
      rxusrclk0            : in  std_logic;
      rxusrclk20           : in  std_logic;
      rxreset0             : in  std_logic;
      txchardispmode0      : in  std_logic;
      txchardispval0       : in  std_logic;
      txcharisk0           : in  std_logic;
      txdata0              : in  std_logic_vector (7 downto 0);
      txbuferr0            : out std_logic;
      txusrclk0            : in  std_logic;
      txusrclk20           : in  std_logic;
      txreset0             : in  std_logic;

      -- Transceiver serial I/O
      txn0                 : out std_logic;
      txp0                 : out std_logic;
      rxn0                 : in  std_logic;
      rxp0                 : in  std_logic;

      txn1                 : out std_logic;
      txp1                 : out std_logic;
      rxn1                 : in  std_logic;
      rxp1                 : in  std_logic;

      -- tranceiver pair shared clock signals
      clkin                : in  std_logic
   );
end transceiver_A;



architecture structural of transceiver_A is



  ------------------------------------------------------------------------------
  -- Component declatarion for the tranceiver GTP file
  -- (generated by the GTP Wizard)
  ------------------------------------------------------------------------------

  component S6_GTPWIZARD
  generic
  (
      -- Simulation attributes
      WRAPPER_SIM_GTPRESET_SPEEDUP    : integer   := 0; -- Set to 1 to speed up sim reset
      WRAPPER_SIMULATION              : integer   := 0  -- Set to 1 for simulation    
  );
  port
  (
    
    --_________________________________________________________________________
    --_________________________________________________________________________
    --TILE0  (X0_Y0)

    ------------------------ Loopback and Powerdown Ports ----------------------
    TILE0_LOOPBACK0_IN                      : in   std_logic_vector(2 downto 0);
    TILE0_LOOPBACK1_IN                      : in   std_logic_vector(2 downto 0);
    TILE0_RXPOWERDOWN0_IN                   : in   std_logic_vector(1 downto 0);
    TILE0_RXPOWERDOWN1_IN                   : in   std_logic_vector(1 downto 0);
    TILE0_TXPOWERDOWN0_IN                   : in   std_logic_vector(1 downto 0);
    TILE0_TXPOWERDOWN1_IN                   : in   std_logic_vector(1 downto 0);
    --------------------------------- PLL Ports --------------------------------
    TILE0_CLK00_IN                          : in   std_logic;
    TILE0_CLK01_IN                          : in   std_logic;
    TILE0_GTPRESET0_IN                      : in   std_logic;
    TILE0_GTPRESET1_IN                      : in   std_logic;
    TILE0_PLLLKDET0_OUT                     : out  std_logic;
    TILE0_PLLLKDET1_OUT                     : out  std_logic;
    TILE0_REFCLKOUT0_OUT                    : out  std_logic;
    TILE0_REFCLKOUT1_OUT                    : out  std_logic;
    TILE0_RESETDONE0_OUT                    : out  std_logic;
    TILE0_RESETDONE1_OUT                    : out  std_logic;
    ----------------------- Receive Ports - 8b10b Decoder ----------------------
    TILE0_RXCHARISCOMMA0_OUT                : out  std_logic;
    TILE0_RXCHARISCOMMA1_OUT                : out  std_logic;
    TILE0_RXCHARISK0_OUT                    : out  std_logic;
    TILE0_RXCHARISK1_OUT                    : out  std_logic;
    TILE0_RXDISPERR0_OUT                    : out  std_logic;
    TILE0_RXDISPERR1_OUT                    : out  std_logic;
    TILE0_RXNOTINTABLE0_OUT                 : out  std_logic;
    TILE0_RXNOTINTABLE1_OUT                 : out  std_logic;
    TILE0_RXRUNDISP0_OUT                    : out  std_logic;
    TILE0_RXRUNDISP1_OUT                    : out  std_logic;
    ---------------------- Receive Ports - Clock Correction --------------------
    TILE0_RXCLKCORCNT0_OUT                  : out  std_logic_vector(2 downto 0);
    TILE0_RXCLKCORCNT1_OUT                  : out  std_logic_vector(2 downto 0);
    --------------- Receive Ports - Comma Detection and Alignment --------------
    TILE0_RXENMCOMMAALIGN0_IN               : in   std_logic;
    TILE0_RXENMCOMMAALIGN1_IN               : in   std_logic;
    TILE0_RXENPCOMMAALIGN0_IN               : in   std_logic;
    TILE0_RXENPCOMMAALIGN1_IN               : in   std_logic;
    ------------------- Receive Ports - RX Data Path interface -----------------
    TILE0_RXDATA0_OUT                       : out  std_logic_vector(7 downto 0);
    TILE0_RXDATA1_OUT                       : out  std_logic_vector(7 downto 0);
    TILE0_RXRECCLK0_OUT                     : out  std_logic;
    TILE0_RXRECCLK1_OUT                     : out  std_logic;
    TILE0_RXRESET0_IN                       : in   std_logic;
    TILE0_RXRESET1_IN                       : in   std_logic;
    TILE0_RXUSRCLK0_IN                      : in   std_logic;
    TILE0_RXUSRCLK1_IN                      : in   std_logic;
    TILE0_RXUSRCLK20_IN                     : in   std_logic;
    TILE0_RXUSRCLK21_IN                     : in   std_logic;
    ------- Receive Ports - RX Driver,OOB signalling,Coupling and Eq.,CDR ------
    TILE0_RXN0_IN                           : in   std_logic;
    TILE0_RXN1_IN                           : in   std_logic;
    TILE0_RXP0_IN                           : in   std_logic;
    TILE0_RXP1_IN                           : in   std_logic;
    ----------- Receive Ports - RX Elastic Buffer and Phase Alignment ----------
    TILE0_RXBUFRESET0_IN                    : in   std_logic;
    TILE0_RXBUFRESET1_IN                    : in   std_logic;
    TILE0_RXBUFSTATUS0_OUT                  : out  std_logic_vector(2 downto 0);
    TILE0_RXBUFSTATUS1_OUT                  : out  std_logic_vector(2 downto 0);
    ---------------------------- TX/RX Datapath Ports --------------------------
    TILE0_GTPCLKOUT0_OUT                    : out  std_logic_vector(1 downto 0);
    TILE0_GTPCLKOUT1_OUT                    : out  std_logic_vector(1 downto 0);
    ------------------- Transmit Ports - 8b10b Encoder Control -----------------
    TILE0_TXCHARISK0_IN                     : in   std_logic;
    TILE0_TXCHARISK1_IN                     : in   std_logic;
    TILE0_TXCHARDISPMODE0_IN                : in   std_logic;
    TILE0_TXCHARDISPMODE1_IN                : in   std_logic;
    TILE0_TXCHARDISPVAL0_IN                 : in   std_logic;
    TILE0_TXCHARDISPVAL1_IN                 : in   std_logic;
    --------------- Transmit Ports - TX Buffer and Phase Alignment -------------
    TILE0_TXBUFSTATUS0_OUT                  : out  std_logic_vector(1 downto 0);
    TILE0_TXBUFSTATUS1_OUT                  : out  std_logic_vector(1 downto 0);
    ------------------ Transmit Ports - TX Data Path interface -----------------
    TILE0_TXDATA0_IN                        : in   std_logic_vector(7 downto 0);
    TILE0_TXDATA1_IN                        : in   std_logic_vector(7 downto 0);
    TILE0_TXOUTCLK0_OUT                     : out  std_logic;
    TILE0_TXOUTCLK1_OUT                     : out  std_logic;
    TILE0_TXRESET0_IN                       : in   std_logic;
    TILE0_TXRESET1_IN                       : in   std_logic;
    TILE0_TXUSRCLK0_IN                      : in   std_logic;
    TILE0_TXUSRCLK1_IN                      : in   std_logic;
    TILE0_TXUSRCLK20_IN                     : in   std_logic;
    TILE0_TXUSRCLK21_IN                     : in   std_logic;
    --------------- Transmit Ports - TX Driver and OOB signalling --------------
    TILE0_TXN0_OUT                          : out  std_logic;
    TILE0_TXN1_OUT                          : out  std_logic;
    TILE0_TXP0_OUT                          : out  std_logic;
    TILE0_TXP1_OUT                          : out  std_logic


  );
  end component;


  ------------------------------------------------------------------------------
  -- Signal declarations for GTP
  ------------------------------------------------------------------------------

   attribute ASYNC_REG : string;

   signal gtpclkout_i          : std_logic_vector(1 downto 0);
   signal gtpreset0_i          : std_logic;
   signal reset0_r             : std_logic_vector(3 downto 0);

   attribute ASYNC_REG of reset0_r : signal is "TRUE";

   signal rxbufstatus_float0   : std_logic_vector(1 downto 0);
   signal txbufstatus_float0   : std_logic;

   -- The following GTP0 inputs will be registered to ease Spartan-6 placement
   signal enablealign_reg0     : std_logic;
   signal txchardispmode_reg0  : std_logic;
   signal txchardispval_reg0   : std_logic;
   signal txcharisk_reg0       : std_logic;
   signal txdata_reg0          : std_logic_vector (7 downto 0);

   -- The following GTP0 outputs will be registered to ease Spartan-6 placement
   signal rxbuferr_int0        : std_logic;
   signal rxchariscomma_int0   : std_logic;
   signal rxcharisk_int0       : std_logic;
   signal rxclkcorcnt_int0     : std_logic_vector(2 downto 0);
   signal rxdata_int0          : std_logic_vector(7 downto 0);
   signal rxdisperr_int0       : std_logic;
   signal rxnotintable_int0    : std_logic;
   signal rxrundisp_int0       : std_logic;
   signal txbuferr_int0        : std_logic;




begin



   -- Assign internal signal to output
   gtpclkout  <= gtpclkout_i(0);


   -----------------------------------------------------------------------------
   -- Full System GTP reset circuitry for GTP0
   -----------------------------------------------------------------------------

   -- Create a reset pulse of a decent length
   process(gtpreset0, gtpclkin)
   begin
     if (gtpreset0 = '1') then
       reset0_r <= "1111";
     elsif gtpclkin'event and gtpclkin = '1' then
       reset0_r <= reset0_r(2 downto 0) & gtpreset0;
     end if;
   end process;

   gtpreset0_i <= reset0_r(3);


   -----------------------------------------------------------------------------
   -- Regsiter the GTP0 signals to ease Spartan-6 placement
   -----------------------------------------------------------------------------

   -- Register GTP0 Tx signals
   process(txusrclk20)
   begin
     if txusrclk20'event and txusrclk20 = '1' then
       if (txreset0 = '1') then
         txchardispmode_reg0  <= '0';
         txchardispval_reg0   <= '0';
         txcharisk_reg0       <= '0';
         txdata_reg0          <= X"00";
       else
         txchardispmode_reg0  <= txchardispmode0;
         txchardispval_reg0   <= txchardispval0;
         txcharisk_reg0       <= txcharisk0;
         txdata_reg0          <= txdata0;
       end if;
     end if;
   end process;


   -- Register GTP0 Rx signals
   process(rxusrclk20)
   begin
     if rxusrclk20'event and rxusrclk20 = '1' then
       if (rxreset0 = '1') then
         enablealign_reg0 <= '0';
         rxbuferr0        <= '0';
         rxchariscomma0   <= '0';
         rxcharisk0       <= '0';
         rxclkcorcnt0     <= "000";
         rxdata0          <= X"00";
         rxdisperr0       <= '0';
         rxnotintable0    <= '0';
         rxrundisp0       <= '0';
         txbuferr0        <= '0';
       else
         enablealign_reg0 <= enablealign0;
         rxbuferr0        <= rxbuferr_int0;
         rxchariscomma0   <= rxchariscomma_int0;
         rxcharisk0       <= rxcharisk_int0;
         rxclkcorcnt0     <= rxclkcorcnt_int0;
         rxdata0          <= rxdata_int0;
         rxdisperr0       <= rxdisperr_int0;
         rxnotintable0    <= rxnotintable_int0;
         rxrundisp0       <= rxrundisp_int0;
         txbuferr0        <= txbuferr_int0;
       end if;
     end if;
   end process;



  ------------------------------------------------------------------------------
  -- Component instantiation for the tranceiver GTP file
  -- (generated by the GTP Wizard)
  ------------------------------------------------------------------------------

   GTP_1000X : S6_GTPWIZARD

    generic map
    (
        -- Simulation attributes
        WRAPPER_SIM_GTPRESET_SPEEDUP      => SIM_GTPRESET_SPEEDUP,
        WRAPPER_SIMULATION                => 0
    )
  port map
    (
        -- GTP0 is used: it is connected to an instance of the core

        TILE0_REFCLKOUT0_OUT              =>       open,
        TILE0_GTPCLKOUT0_OUT              =>       gtpclkout_i,
        TILE0_PLLLKDET0_OUT               =>       plllkdet0,
        TILE0_GTPRESET0_IN                =>       gtpreset0_i,
        TILE0_CLK00_IN                    =>       clkin,
        TILE0_RESETDONE0_OUT              =>       open,
        TILE0_RXBUFSTATUS0_OUT(1 downto 0)=>       rxbufstatus_float0,
        TILE0_RXBUFSTATUS0_OUT(2)         =>       rxbuferr_int0,
        TILE0_RXCHARISCOMMA0_OUT          =>       rxchariscomma_int0,
        TILE0_RXCHARISK0_OUT              =>       rxcharisk_int0,
        TILE0_RXCLKCORCNT0_OUT            =>       rxclkcorcnt_int0,
        TILE0_RXDATA0_OUT                 =>       rxdata_int0,
        TILE0_RXDISPERR0_OUT              =>       rxdisperr_int0,
        TILE0_RXNOTINTABLE0_OUT           =>       rxnotintable_int0,
        TILE0_RXRECCLK0_OUT               =>       open,
        TILE0_RXRUNDISP0_OUT              =>       rxrundisp_int0,
        TILE0_TXBUFSTATUS0_OUT(0)         =>       txbufstatus_float0,
        TILE0_TXBUFSTATUS0_OUT(1)         =>       txbuferr_int0,
        TILE0_TXN0_OUT                    =>       txn0,
        TILE0_TXP0_OUT                    =>       txp0,
        TILE0_TXOUTCLK0_OUT               =>       open,
        TILE0_LOOPBACK0_IN(2 downto 1)    =>       "00",
        TILE0_LOOPBACK0_IN(0)             =>       loopback0,
        TILE0_RXPOWERDOWN0_IN(0)          =>       powerdown0,
        TILE0_RXPOWERDOWN0_IN(1)          =>       powerdown0,
        TILE0_TXPOWERDOWN0_IN(0)          =>       powerdown0,
        TILE0_TXPOWERDOWN0_IN(1)          =>       powerdown0,
        TILE0_RXBUFRESET0_IN              =>       rxreset0,
        TILE0_RXENMCOMMAALIGN0_IN         =>       enablealign_reg0,
        TILE0_RXENPCOMMAALIGN0_IN         =>       enablealign_reg0,
        TILE0_RXN0_IN                     =>       rxn0,
        TILE0_RXP0_IN                     =>       rxp0,
        TILE0_RXRESET0_IN                 =>       rxreset0,
        TILE0_RXUSRCLK0_IN                =>       rxusrclk0,
        TILE0_RXUSRCLK20_IN               =>       rxusrclk20,
        TILE0_TXCHARDISPMODE0_IN          =>       txchardispmode_reg0,
        TILE0_TXCHARDISPVAL0_IN           =>       txchardispval_reg0,
        TILE0_TXCHARISK0_IN               =>       txcharisk_reg0,
        TILE0_TXDATA0_IN                  =>       txdata_reg0,
        TILE0_TXRESET0_IN                 =>       txreset0,
        TILE0_TXUSRCLK0_IN                =>       txusrclk0,
        TILE0_TXUSRCLK20_IN               =>       txusrclk20,

        -- GTP1 is currently unused

        TILE0_REFCLKOUT1_OUT              =>       open,
        TILE0_GTPCLKOUT1_OUT              =>       open,
        TILE0_PLLLKDET1_OUT               =>       open,
        TILE0_CLK01_IN                    =>       '0',
        TILE0_GTPRESET1_IN                =>       '0',
        TILE0_RESETDONE1_OUT              =>       open,
        TILE0_RXBUFSTATUS1_OUT            =>       open,
        TILE0_RXCHARISCOMMA1_OUT          =>       open,
        TILE0_RXCHARISK1_OUT              =>       open,
        TILE0_RXCLKCORCNT1_OUT            =>       open,
        TILE0_RXDATA1_OUT                 =>       open,
        TILE0_RXDISPERR1_OUT              =>       open,
        TILE0_RXNOTINTABLE1_OUT           =>       open,
        TILE0_RXRECCLK1_OUT               =>       open,
        TILE0_RXRUNDISP1_OUT              =>       open,
        TILE0_TXBUFSTATUS1_OUT            =>       open,
        TILE0_TXN1_OUT                    =>       txn1,
        TILE0_TXP1_OUT                    =>       txp1,
        TILE0_TXOUTCLK1_OUT               =>       open,
        TILE0_LOOPBACK1_IN                =>       "000",
        TILE0_RXPOWERDOWN1_IN             =>       "11",
        TILE0_TXPOWERDOWN1_IN             =>       "11",
        TILE0_RXBUFRESET1_IN              =>       '0',
        TILE0_RXENMCOMMAALIGN1_IN         =>       '0',
        TILE0_RXENPCOMMAALIGN1_IN         =>       '0',
        TILE0_RXN1_IN                     =>       rxn1,
        TILE0_RXP1_IN                     =>       rxp1,
        TILE0_RXRESET1_IN                 =>       '0',
        TILE0_RXUSRCLK1_IN                =>       '0',
        TILE0_RXUSRCLK21_IN               =>       '0',
        TILE0_TXCHARDISPMODE1_IN          =>       '0',
        TILE0_TXCHARDISPVAL1_IN           =>       '0',
        TILE0_TXCHARISK1_IN               =>       '0',
        TILE0_TXDATA1_IN                  =>       "00000000",
        TILE0_TXRESET1_IN                 =>       '0',
        TILE0_TXUSRCLK1_IN                =>       '0',
        TILE0_TXUSRCLK21_IN               =>       '0'
     );



end structural;

